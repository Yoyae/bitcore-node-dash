#!/bin/bash

set -e

root_dir="${HOME}/.bitcore"
platform=`uname -a | awk '{print tolower($1)}'`
arch=`uname -m`
version="0.12.2"
url="https://github.com/monacocoin-net/monoeci-core/releases/download/${version}"

if [[ "${platform}" == "linux" && "${arch}" == "x86_64" ]]; then
    tarball_name="monoeciCore-${version}-linux64-cli.Ubuntu16.04.tar.gz"
#elif [ "${platform}" == "darwin" ]; then
#    tarball_name="monoeciCore-${version}-osx64.tar.gz"
else
    echo "Monoeci binary distribution not available for platform and architecture"
    exit -1
fi

binary_url="${url}/${tarball_name}"
download_bitcoind() {

    echo ${root_dir}
    mkdir -p "${root_dir}"
    mkdir -p "${root_dir}/data"

    cd "${root_dir}/data"

    echo "Downloading monoeci: ${binary_url}"

    is_curl=true
    if hash curl 2>/dev/null; then
        curl --fail -I $binary_url >/dev/null 2>&1
    else
        is_curl=false
        wget --server-response --spider $binary_url >/dev/null 2>&1
    fi

    if test $? -eq 0; then
        if [ "${is_curl}" = true ]; then
            curl -L $binary_url > $tarball_name
        else
            wget $binary_url
        fi
        if test -e "${tarball_name}"; then
            echo "Unpacking monoeci distribution"
            tar -xvzf $tarball_name
#            if test $? -eq 0; then
#                ln -sf "monoeciCore-${version}/bin/monoecid"
#                return;
#            fi
        fi
    fi
    echo "Monoeci binary distribution could not be downloaded"
    exit -1
}

download=1
verify=0

if [ "${SKIP_BITCOIN_DOWNLOAD}" = 1 ]; then
    download=0;
fi

while [ -n "$1" ]; do
  param="$1"
  value="$2"

  case $param in
    --skip-bitcoin-download)
          download=0
          ;;
  esac
  shift
done

if [ "${download}" = 1 ]; then
    download_bitcoind
fi

exit 0
